diff --git a/CMakeLists.txt b/CMakeLists.txt
new file mode 100644
index 0000000..ab04e8d
--- /dev/null
+++ b/CMakeLists.txt
@@ -0,0 +1,139 @@
+cmake_minimum_required(VERSION 3.3)
+project(jxrlib)
+include(flags OPTIONAL)
+set(lib_name jxrlib)
+#######################################
+# additional include directories
+include_directories(
+  ${CMAKE_CURRENT_SOURCE_DIR}/common/include
+  ${CMAKE_CURRENT_SOURCE_DIR}/image/sys
+  ${CMAKE_CURRENT_SOURCE_DIR}/jxrgluelib
+  ${CMAKE_CURRENT_SOURCE_DIR}/jxrtestlib
+  )
+#if(WIN32)
+#  include_directories(
+#    ${CMAKE_CURRENT_SOURCE_DIR}/image/x86
+#    )
+#endif()
+#######################################
+# preprocessor
+add_definitions(-DDISABLE_PERF_MEASUREMENT)
+if(CMAKE_COMPILER_IS_GNUCXX OR "${CMAKE_CXX_COMPILER_ID}" MATCHES "Clang")
+  add_definitions(-D__ANSI__)
+endif()
+#######################################
+# library sources
+###################
+# JXRCommon
+set(JXRCommon_srcs
+  image/sys/adapthuff.c
+  image/sys/ansi.h
+  image/sys/common.h
+  image/sys/image.c
+  image/sys/perfTimer.h
+  image/sys/perfTimerANSI.c
+  image/sys/strcodec.c
+  image/sys/strcodec.h
+  image/sys/strPredQuant.c
+  image/sys/strTransform.c
+  image/sys/strTransform.h
+  image/sys/windowsmediaphoto.h
+  image/sys/xplatform_image.h
+  )
+source_group(JXRCommon FILES ${JXRCommon_srcs})
+list(APPEND ${lib_name}_libsrcs ${JXRCommon_srcs})
+###################
+# JXRDecode
+set(JXRDecode_srcs
+  image/decode/decode.c
+  image/decode/decode.h
+  image/decode/JXRTranscode.c
+  image/decode/postprocess.c
+  image/decode/segdec.c
+  image/decode/strdec.c
+  image/decode/strdec_x86.c
+  image/decode/strInvTransform.c
+  image/decode/strPredQuantDec.c
+  )
+source_group(JXRDecode FILES ${JXRDecode_srcs})
+list(APPEND ${lib_name}_libsrcs ${JXRDecode_srcs})
+###################
+# JXREncode
+set(JXREncode_srcs
+  image/encode/encode.c
+  image/encode/encode.h
+  image/encode/segenc.c
+  image/encode/strenc.c
+  image/encode/strenc_x86.c
+  image/encode/strFwdTransform.c
+  image/encode/strPredQuantEnc.c
+  )
+source_group(JXREncode FILES ${JXREncode_srcs})
+list(APPEND ${lib_name}_libsrcs ${JXREncode_srcs})
+###################
+# Include
+set(Include_srcs
+  common/include/guiddef.h
+  common/include/wmsal.h
+  common/include/wmspecstring.h
+  common/include/wmspecstrings_adt.h
+  common/include/wmspecstrings_strict.h
+  common/include/wmspecstrings_undef.h
+  )
+source_group(Include FILES ${Include_srcs})
+list(APPEND ${lib_name}_libsrcs ${Include_srcs})
+###################
+# JXRGlue
+set(JXRGlue_srcs
+  jxrgluelib/JXRGlue.c
+  jxrgluelib/JXRGlue.h
+  jxrgluelib/JXRGlueJxr.c
+  jxrgluelib/JXRGluePFC.c
+  jxrgluelib/JXRMeta.c
+  jxrgluelib/JXRMeta.h
+  )
+source_group(JXRGlue FILES ${JXRGlue_srcs})
+list(APPEND ${lib_name}_libsrcs ${JXRGlue_srcs})
+###################
+# JXRTest
+set(JXRTest_srcs
+  jxrtestlib/JXRTest.c
+  jxrtestlib/JXRTest.h
+  jxrtestlib/JXRTestBmp.c
+  jxrtestlib/JXRTestHdr.c
+  jxrtestlib/JXRTestPnm.c
+  jxrtestlib/JXRTestTif.c
+  jxrtestlib/JXRTestYUV.c
+  )
+source_group(JXRTest FILES ${JXRTest_srcs})
+list(APPEND ${lib_name}_libsrcs ${JXRTest_srcs})
+#######################################
+# library
+add_library(${lib_name} STATIC ${${lib_name}_libsrcs})
+include(CheckLibraryExists)
+check_library_exists(m pow "${CMAKE_LIBRARY_PATH}" HAVE_LIBM)
+if(HAVE_LIBM)
+  target_link_libraries(${lib_name} m)
+endif()
+#######################################
+# executables
+set(exes JXRDec420 JxrDecApp JxrEnc420 JxrEncApp)
+foreach(exe ${exes})
+  add_executable(${exe} jxrencoderdecoder/${exe}.c)
+  target_link_libraries(${exe} ${lib_name})
+endforeach()
+#######################################
+# install
+set(lib_hdrs
+  "${Include_srcs}"
+  image/sys/windowsmediaphoto.h
+  jxrgluelib/JXRGlue.h
+  jxrgluelib/JXRMeta.h
+  )
+install(TARGETS ${lib_name} EXPORT ${PROJECT_NAME}-targets
+  RUNTIME DESTINATION bin
+  LIBRARY DESTINATION lib
+  ARCHIVE DESTINATION lib
+  )
+install(FILES ${lib_hdrs} DESTINATION include/jxrlib)
+install(EXPORT ${PROJECT_NAME}-targets DESTINATION lib/cmake)
diff --git a/image/sys/strcodec.h b/image/sys/strcodec.h
index 695a454..90b94ba 100644
--- a/image/sys/strcodec.h
+++ b/image/sys/strcodec.h
@@ -64,7 +64,7 @@
 
 #ifndef UNREFERENCED_PARAMETER
 #define UNREFERENCED_PARAMETER(P) { (P) = (P); }
-#endif UNREFERENCED_PARAMETER
+#endif // UNREFERENCED_PARAMETER
 
 #ifdef UNDER_CE
 #define PLATFORM_WCE
diff --git a/jxrencoderdecoder/JxrDecApp.c b/jxrencoderdecoder/JxrDecApp.c
index 35fa10c..df0c415 100644
--- a/jxrencoderdecoder/JxrDecApp.c
+++ b/jxrencoderdecoder/JxrDecApp.c
@@ -427,7 +427,7 @@ ERR WmpDecAppCreateEncoderFromExt(
     Call(GetTestEncodeIID(szExt, &pIID));
 
     // Create encoder
-    Call(PKTestFactory_CreateCodec(pIID, ppIE));
+    Call(PKTestFactory_CreateCodec(pIID, (void **) ppIE));
 
 Cleanup:
     return err;
diff --git a/jxrencoderdecoder/JxrEncApp.c b/jxrencoderdecoder/JxrEncApp.c
index aa9de53..d0ce39a 100644
--- a/jxrencoderdecoder/JxrEncApp.c
+++ b/jxrencoderdecoder/JxrEncApp.c
@@ -615,7 +615,7 @@ main(int argc, char* argv[])
 
     //================================
     Call(PKCreateCodecFactory(&pCodecFactory, WMP_SDK_VERSION));
-    Call(pCodecFactory->CreateCodec(&IID_PKImageWmpEncode, &pEncoder));
+    Call(pCodecFactory->CreateCodec(&IID_PKImageWmpEncode, (void **) &pEncoder));
 
     //----------------------------------------------------------------
     Call(PKCreateTestFactory(&pTestFactory, WMP_SDK_VERSION));
diff --git a/jxrtestlib/JXRTest.c b/jxrtestlib/JXRTest.c
index b2a9b64..5552606 100644
--- a/jxrtestlib/JXRTest.c
+++ b/jxrtestlib/JXRTest.c
@@ -198,7 +198,7 @@ ERR PKTestFactory_CreateDecoderFromFile(const char* szFilename, PKImageDecode**
     ERR err = WMP_errSuccess;
 
     char *pExt = NULL;
-    PKIID* pIID = NULL;
+    const PKIID* pIID = NULL;
 
     struct WMPStream* pStream = NULL;
     PKImageDecode* pDecoder = NULL;
@@ -214,7 +214,7 @@ ERR PKTestFactory_CreateDecoderFromFile(const char* szFilename, PKImageDecode**
     Call(CreateWS_File(&pStream, szFilename, "rb"));
 
     // Create decoder
-    Call(PKTestFactory_CreateCodec(pIID, ppDecoder));
+    Call(PKTestFactory_CreateCodec(pIID, (void **) ppDecoder));
     pDecoder = *ppDecoder;
 
     // attach stream to decoder
@@ -232,7 +232,7 @@ ERR PKCreateTestFactory(PKCodecFactory** ppCFactory, U32 uVersion)
 
     UNREFERENCED_PARAMETER( uVersion );
 
-    Call(PKAlloc(ppCFactory, sizeof(**ppCFactory)));
+    Call(PKAlloc((void **) ppCFactory, sizeof(**ppCFactory)));
     pCFactory = *ppCFactory;
 
     pCFactory->CreateCodec = PKTestFactory_CreateCodec;
@@ -287,7 +287,7 @@ ERR PKTestDecode_Release(
 
     pID->fStreamOwner && pID->pStream->Close(&pID->pStream);
 
-    return PKFree(ppID);
+    return PKFree((void **) ppID);
 }
 
 ERR PKTestDecode_Create(
@@ -296,7 +296,7 @@ ERR PKTestDecode_Create(
     ERR err = WMP_errSuccess;
     PKTestDecode* pID = NULL;
 
-    Call(PKAlloc(ppID, sizeof(**ppID)));
+    Call(PKAlloc((void **) ppID, sizeof(**ppID)));
 
     pID = *ppID;
     pID->Initialize = PKTestDecode_Initialize;
diff --git a/jxrtestlib/JXRTestHdr.c b/jxrtestlib/JXRTestHdr.c
index a62914c..6f108fb 100644
--- a/jxrtestlib/JXRTestHdr.c
+++ b/jxrtestlib/JXRTestHdr.c
@@ -25,9 +25,9 @@
 // POSSIBILITY OF SUCH DAMAGE.
 //
 //*@@@---@@@@******************************************************************
-#ifndef ANSI
+#ifndef __ANSI__
 #define _CRT_SECURE_NO_WARNINGS
-#endif ANSI
+#endif // __ANSI__
 
 #include <stdlib.h>
 #include <string.h>
diff --git a/jxrtestlib/JXRTestPnm.c b/jxrtestlib/JXRTestPnm.c
index 8917d4a..840c746 100644
--- a/jxrtestlib/JXRTestPnm.c
+++ b/jxrtestlib/JXRTestPnm.c
@@ -27,7 +27,7 @@
 //*@@@---@@@@******************************************************************
 #ifndef ANSI
 #define _CRT_SECURE_NO_WARNINGS
-#endif ANSI
+#endif // ANSI
 
 #include <stdlib.h>
 
diff --git a/jxrtestlib/JXRTestTif.c b/jxrtestlib/JXRTestTif.c
index 39f619d..d8be054 100644
--- a/jxrtestlib/JXRTestTif.c
+++ b/jxrtestlib/JXRTestTif.c
@@ -909,8 +909,8 @@ ERR PKImageDecode_Release_TIF(PKTestDecode** ppID)
 
     PKTestDecode *pID = *ppID;
 
-    Call(WMPFree(&pID->EXT.TIF.uStripOffsets));
-    Call(WMPFree(&pID->EXT.TIF.uStripByteCounts));
+    Call(WMPFree((void **) &pID->EXT.TIF.uStripOffsets));
+    Call(WMPFree((void **) &pID->EXT.TIF.uStripByteCounts));
 
     Call(PKTestDecode_Release(ppID));
 
