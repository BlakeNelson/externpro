diff --git a/CMakeLists.txt b/CMakeLists.txt
new file mode 100644
index 0000000..0ec9c30
--- /dev/null
+++ b/CMakeLists.txt
@@ -0,0 +1,146 @@
+cmake_minimum_required(VERSION 3.0)
+project(hdphoto)
+include(flags OPTIONAL)
+set(lib_name hdphoto)
+#######################################
+# additional include directories
+include_directories(
+  ${CMAKE_CURRENT_SOURCE_DIR}/common/include
+  ${CMAKE_CURRENT_SOURCE_DIR}/image/sys
+  ${CMAKE_CURRENT_SOURCE_DIR}/systems/tools/wmpgluelib
+  ${CMAKE_CURRENT_SOURCE_DIR}/systems/tools/wmpmetalib
+  )
+if(WIN32)
+  include_directories(
+    ${CMAKE_CURRENT_SOURCE_DIR}/image/x86
+    ${CMAKE_CURRENT_SOURCE_DIR}/network/client/debughlp/memtrace
+    )
+endif()
+#######################################
+# preprocessor
+if(MSVC)
+  add_definitions(
+    -D_CRT_SECURE_NO_WARNINGS
+    )
+elseif(CMAKE_COMPILER_IS_GNUCXX OR "${CMAKE_CXX_COMPILER_ID}" MATCHES "Clang")
+  add_definitions(
+    -D__ANSI__
+    -DDISABLE_PERF_MEASUREMENT
+    )
+endif()
+#######################################
+# library sources
+###################
+# Common
+set(Common_srcs
+  image/sys/adapthuff.c
+  image/sys/common.h
+  image/sys/image.c
+  image/sys/perfTimer.h
+  image/sys/perfTimerANSI.c
+  image/sys/strcodec.c
+  image/sys/strcodec.h
+  image/sys/strPredQuant.c
+  image/sys/strTransform.c
+  image/sys/strTransform.h
+  image/sys/windowsmediaphoto.h
+  image/sys/xplatform_image.h
+  )
+source_group(Common FILES ${Common_srcs})
+list(APPEND ${lib_name}_libsrcs ${Common_srcs})
+###################
+# Decode
+set(Decode_srcs
+  image/decode/decode.c
+  image/decode/decode.h
+  image/decode/huffman.c
+  image/decode/postprocess.c
+  image/decode/segdec.c
+  image/decode/strdec.c
+  image/decode/strInvTransform.c
+  image/decode/strPredQuantDec.c
+  image/decode/WMPTranscode.c
+  )
+source_group(Decode FILES ${Decode_srcs})
+list(APPEND ${lib_name}_libsrcs ${Decode_srcs})
+###################
+# Encode
+set(Encode_srcs
+  image/encode/encode.c
+  image/encode/encode.h
+  image/encode/segenc.c
+  image/encode/strenc.c
+  image/encode/strFwdTransform.c
+  image/encode/strPredQuantEnc.c
+  )
+source_group(Encode FILES ${Encode_srcs})
+list(APPEND ${lib_name}_libsrcs ${Encode_srcs})
+###################
+# Include
+set(Include_srcs
+  common/include/guiddef.h
+  common/include/wmsal.h
+  common/include/wmspecstring.h
+  common/include/wmspecstrings_adt.h
+  common/include/wmspecstrings_strict.h
+  )
+source_group(Include FILES ${Include_srcs})
+list(APPEND ${lib_name}_libsrcs ${Include_srcs})
+###################
+# Memtrace
+if(WIN32)
+  set(Memtrace_srcs
+    network/client/debughlp/memtrace/heaptrace.cpp
+    network/client/debughlp/memtrace/heaptrace.h
+    network/client/debughlp/memtrace/memtrace.cpp
+    network/client/debughlp/memtrace/memtrace.h
+    network/client/debughlp/memtrace/memtrace_com.h
+    network/client/debughlp/memtrace/regtrace.cpp
+    network/client/debughlp/memtrace/regtrace.h
+    network/client/debughlp/memtrace/sysheap.cpp
+    network/client/debughlp/memtrace/sysMalloc.cpp
+    )
+  source_group(Memtrace FILES ${Memtrace_srcs})
+  list(APPEND ${lib_name}_libsrcs ${Memtrace_srcs})
+endif()
+###################
+# WMPGlue
+set(WMPGlue_srcs
+  systems/tools/wmpgluelib/WMPGlue.c
+  systems/tools/wmpgluelib/WMPGlue.h
+  systems/tools/wmpgluelib/WMPGlueBmp.c
+  systems/tools/wmpgluelib/WMPGlueHdr.c
+  systems/tools/wmpgluelib/WMPGluePFC.c
+  systems/tools/wmpgluelib/WMPGluePnm.c
+  systems/tools/wmpgluelib/WMPGlueTif.c
+  systems/tools/wmpgluelib/WMPGlueWmp.c
+  systems/tools/wmpgluelib/WMPGlueYUV.c
+  )
+source_group(WMPGlue FILES ${WMPGlue_srcs})
+list(APPEND ${lib_name}_libsrcs ${WMPGlue_srcs})
+###################
+# WMPMeta
+set(WMPMeta_srcs
+  systems/tools/wmpmetalib/WMPMeta.c
+  systems/tools/wmpmetalib/WMPMeta.h
+  )
+source_group(WMPMeta FILES ${WMPMeta_srcs})
+list(APPEND ${lib_name}_libsrcs ${WMPMeta_srcs})
+#######################################
+# library
+add_library(${lib_name} STATIC ${${lib_name}_libsrcs})
+#######################################
+# install
+set(lib_hdrs
+  "${Include_srcs}"
+  image/sys/windowsmediaphoto.h
+  systems/tools/wmpgluelib/WMPGlue.h
+  systems/tools/wmpmetalib/WMPMeta.h
+  )
+install(TARGETS ${lib_name} EXPORT ${PROJECT_NAME}-targets
+  RUNTIME DESTINATION bin
+  LIBRARY DESTINATION lib
+  ARCHIVE DESTINATION lib
+  )
+install(FILES ${lib_hdrs} DESTINATION include/hdphoto)
+install(EXPORT ${PROJECT_NAME}-targets DESTINATION lib/cmake)
diff --git a/common/include/guiddef.h b/common/include/guiddef.h
index c6af6d1..3632fc9 100644
--- a/common/include/guiddef.h
+++ b/common/include/guiddef.h
@@ -29,7 +29,7 @@ typedef struct _GUID {
 #endif
 
 #ifndef FAR
-#if defined(_WIN32) || defined(__ANSI__)
+#if defined(_WIN32) || defined(__ANSI__) || defined(__GNUC__)
 #define FAR
 #else
 #define FAR _far
@@ -58,7 +58,7 @@ typedef struct _GUID {
 
 #ifdef INITGUID
 #define DEFINE_GUID(name, l, w1, w2, b1, b2, b3, b4, b5, b6, b7, b8) \
-        EXTERN_C const GUID DECLSPEC_SELECTANY name \
+        const GUID DECLSPEC_SELECTANY name \
                 = { l, w1, w2, { b1, b2,  b3,  b4,  b5,  b6,  b7,  b8 } }
 #else
 #define DEFINE_GUID(name, l, w1, w2, b1, b2, b3, b4, b5, b6, b7, b8) \
diff --git a/common/include/wmsal.h b/common/include/wmsal.h
index 6f4db60..8185eb6 100644
--- a/common/include/wmsal.h
+++ b/common/include/wmsal.h
@@ -265,7 +265,9 @@ nothing, and do not affect the compiled code.
      in the negated form __notnull or the possibly null form __maybenull.
     */
 
+# ifndef __GNUC__
     #define __null                  __declspec("SAL_null")
+# endif
     #define __notnull               __declspec("SAL_notnull")
     #define __maybenull             __declspec("SAL_maybenull")
 
@@ -449,7 +451,9 @@ nothing, and do not affect the compiled code.
     #define __inner_fallthrough                 __FallThrough();
 
 #else
+# ifndef __GNUC__
     #define __null
+# endif
     #define __notnull
     #define __maybenull
     #define __readonly
@@ -505,7 +509,9 @@ buffer, use the table in the buffer annotations section.
 #define __in_nz                                                 __in
 #define __in_ecount_nz(size)                                    __in_ecount(size)
 #define __in_bcount_nz(size)                                    __in_bcount(size)
+#ifndef __GNUC__
 #define __out                                                   __ecount(1) __post __valid __refparam
+#endif
 #define __out_ecount(size)                                      __ecount(size) __post __valid __refparam
 #define __out_bcount(size)                                      __bcount(size) __post __valid __refparam
 #define __out_ecount_part(size,length)                          __out_ecount(size) __post __elem_readableTo(length)
@@ -548,7 +554,9 @@ buffer, use the table in the buffer annotations section.
 #define __in_nz_opt                                             __in_opt                                     
 #define __in_ecount_nz_opt(size)                                __in_ecount_opt(size)                         
 #define __in_bcount_nz_opt(size)                                __in_bcount_opt(size)                         
+#ifndef __GNUC__
 #define __out_opt                                               __out                                       __exceptthat __maybenull
+#endif
 #define __out_ecount_opt(size)                                  __out_ecount(size)                          __exceptthat __maybenull
 #define __out_bcount_opt(size)                                  __out_bcount(size)                          __exceptthat __maybenull
 #define __out_ecount_part_opt(size,length)                      __out_ecount_part(size,length)              __exceptthat __maybenull
@@ -726,4 +734,5 @@ of each annotation, see the advanced annotations section.
 }
 #endif
 
-#endif //__specstrings
\ No newline at end of file
+#endif //__specstrings
+
diff --git a/common/include/wmspecstring.h b/common/include/wmspecstring.h
index 76dd06c..515e16b 100644
--- a/common/include/wmspecstring.h
+++ b/common/include/wmspecstring.h
@@ -17,7 +17,7 @@
 #if _MSC_VER
 #pragma once
 #endif
-#include <wmsal.h>  
+#include "wmsal.h"  
 
 #ifndef __SAL_H_FULL_VER
 #define __SAL_H_FULL_VER 140050727
@@ -262,7 +262,7 @@ __inner_assume_bound_dec
 #ifdef  __cplusplus
 }
 #endif
-#include <wmspecstrings_adt.h>
+#include "wmspecstrings_adt.h"
 #ifdef _PREFIX_
 /**************************************************************************
 * Defintion of __pfx_assume and __pfx_assert. Thse should be the only
@@ -288,7 +288,7 @@ void __pfx_assume(int, const char *);
 * Must avoid redfinitions of macros to workaround rc.exe issues. 
 ***************************************************************************/
 #ifndef RC_INVOKED
-#include <wmspecstrings_strict.h>
+#include "wmspecstrings_strict.h"
 #endif /* RC_INVOKED */
 #endif /* #ifndef SPECSTRINGS_H */
 
diff --git a/image/decode/segdec.c b/image/decode/segdec.c
index d942e19..aca74ef 100644
--- a/image/decode/segdec.c
+++ b/image/decode/segdec.c
@@ -18,7 +18,7 @@
 extern const int dctIndex[3][16];
 extern const int blkOffset[16];
 extern const int blkOffsetUV[4];
-Int DecodeSignificantAbsLevel (struct CAdaptiveHuffman *pAHexpt, BitIOInfo* pIO);
+static Int DecodeSignificantAbsLevel (struct CAdaptiveHuffman *pAHexpt, BitIOInfo* pIO);
 
 //#undef X86OPT_INLINE
 
@@ -34,7 +34,10 @@ Int DecodeSignificantAbsLevel (struct CAdaptiveHuffman *pAHexpt, BitIOInfo* pIO)
 static U32 _FORCEINLINE _load4(void* pv)
 {
 #ifdef _BIG__ENDIAN_
-    return (*(U32*)pv);
+    // avoid unaligned memory access - can't just return (*(U32*)pv)
+    U32  v;
+    memcpy(&v, pv, sizeof(v));
+    return v;
 #else // _BIG__ENDIAN_
 #ifdef _M_IA64
     U32  v;
diff --git a/image/decode/strdec.c b/image/decode/strdec.c
index 791d25f..193de0e 100644
--- a/image/decode/strdec.c
+++ b/image/decode/strdec.c
@@ -447,8 +447,6 @@ static _FORCEINLINE float pixel2float(PixelI _h, const char _c, const unsigned c
 
     I32 s, iTempH, m, e, lmshift = (1 << _lm);
 
-    assert (_c <= 127);
-
     iTempH = (I32) _h ;
     s = (iTempH >> 31);
     iTempH = (iTempH ^ s) - s; // abs(iTempH)
@@ -3135,7 +3133,7 @@ Int ReadWMIHeader(
 // 0
     /** signature **/
     Call(pWS->Read(pWS, szMS, sizeof(szMS)));
-    FailIf(szMS != strstr(szMS, "WMPHOTO"), WMP_errUnsupportedFormat);
+    FailIf((char*)szMS != strstr(szMS, "WMPHOTO"), WMP_errUnsupportedFormat);
     //================================
     Call(attach_SB(pSB, pWS));
 
diff --git a/image/sys/perfTimer.h b/image/sys/perfTimer.h
index 4a47407..d0e498b 100644
--- a/image/sys/perfTimer.h
+++ b/image/sys/perfTimer.h
@@ -57,6 +57,9 @@ typedef struct PERFTIMERRESULTS
         // Presence of zero-time intervals may indicate insufficient clock precision
 } PERFTIMERRESULTS;
 
+// Forward declaration
+struct PERFTIMERSTATE;
+
 #define NANOSECONDS_PER_SECOND  1000000000
 
 
diff --git a/image/sys/strTransform.h b/image/sys/strTransform.h
index 76d772d..b02d617 100644
--- a/image/sys/strTransform.h
+++ b/image/sys/strTransform.h
@@ -75,4 +75,5 @@ static void VERIFY_REPORT()
 }
 #endif // VERIFY_16BIT
 
-#endif // WMI_STRTRANSFORM_H
\ No newline at end of file
+#endif // WMI_STRTRANSFORM_H
+
diff --git a/image/sys/strcodec.c b/image/sys/strcodec.c
index 6c6e558..09d1149 100644
--- a/image/sys/strcodec.c
+++ b/image/sys/strcodec.c
@@ -470,7 +470,7 @@ ERR CloseWS_List(struct WMPStream** ppWS)
             pBuf = pNext;
             pNext = (U8 *)(((void **)(pBuf))[0]);
 //printf ("delete buffer    %x\n", pBuf);
-            Call(WMPFree(&pBuf));
+            Call(WMPFree((void **)&pBuf));
         }
     }
     Call(WMPFree((void**)ppWS));
@@ -662,7 +662,10 @@ U32 _byteswap_ulong(U32 bits)
 U32 load4BE(void* pv)
 {
 #ifdef _BIG__ENDIAN_
-    return (*(U32*)pv);
+    // avoid unaligned memory access - can't just return (*(U32*)pv)
+    U32  v;
+    memcpy(&v, pv, sizeof(v));
+    return v;
 #else // _BIG__ENDIAN_
 #ifdef _M_IA64
     U32  v;
diff --git a/systems/tools/wmpgluelib/WMPGlue.c b/systems/tools/wmpgluelib/WMPGlue.c
index 94eb9ba..5f68284 100644
--- a/systems/tools/wmpgluelib/WMPGlue.c
+++ b/systems/tools/wmpgluelib/WMPGlue.c
@@ -368,7 +368,7 @@ ERR PKCreateFactory_CreateStream(PKStream** ppStream)
 {
     ERR err = WMP_errSuccess;
 
-    Call(PKAlloc(ppStream, sizeof(**ppStream)));
+    Call(PKAlloc((void**)ppStream, sizeof(**ppStream)));
 
 Cleanup:
     return err;
@@ -378,7 +378,7 @@ ERR PKCreateFactory_Release(PKFactory** ppFactory)
 {
     ERR err = WMP_errSuccess;
 
-    Call(PKFree(ppFactory));
+    Call(PKFree((void**)ppFactory));
 
 Cleanup: 
     return err;
@@ -390,7 +390,7 @@ ERR PKCreateFactory(PKFactory** ppFactory, U32 uVersion)
     ERR err = WMP_errSuccess;
     PKFactory* pFactory = NULL;
 
-    Call(PKAlloc(ppFactory, sizeof(**ppFactory)));
+    Call(PKAlloc((void**)ppFactory, sizeof(**ppFactory)));
     pFactory = *ppFactory;
 
     pFactory->CreateStream = PKCreateFactory_CreateStream;
@@ -491,7 +491,7 @@ ERR PKCodecFactory_CreateDecoderFromFile(const char* szFilename, PKImageDecode**
     ERR err = WMP_errSuccess;
 
     char *pExt = NULL;
-    PKIID* pIID = NULL;
+    const PKIID* pIID = NULL;
 
     struct WMPStream* pStream = NULL;
     PKImageDecode* pDecoder = NULL;
@@ -507,14 +507,15 @@ ERR PKCodecFactory_CreateDecoderFromFile(const char* szFilename, PKImageDecode**
     Call(CreateWS_File(&pStream, szFilename, "rb"));
 
     // Create decoder
-    Call(PKCodecFactory_CreateCodec(pIID, ppDecoder));
+    Call(PKCodecFactory_CreateCodec(pIID, (void**)ppDecoder));
     pDecoder = *ppDecoder;
 
     // attach stream to decoder
     Call(pDecoder->Initialize(pDecoder, pStream));
-    pDecoder->fStreamOwner = !0;
 
 Cleanup:
+    if (pStream)
+      pDecoder->fStreamOwner = !0;
     return err;
 }
 
@@ -523,7 +524,7 @@ ERR PKCodecFactory_CreateFormatConverter(PKFormatConverter** ppFConverter)
     ERR err = WMP_errSuccess;
     PKFormatConverter* pFC = NULL;
 
-    Call(PKAlloc(ppFConverter, sizeof(**ppFConverter)));
+    Call(PKAlloc((void**)ppFConverter, sizeof(**ppFConverter)));
     pFC = *ppFConverter;
 
     pFC->Initialize = PKFormatConverter_Initialize;
@@ -543,7 +544,7 @@ ERR PKCreateCodecFactory_Release(PKCodecFactory** ppCFactory)
 {
     ERR err = WMP_errSuccess;
 
-    Call(PKFree(ppCFactory));
+    Call(PKFree((void**)ppCFactory));
 
 Cleanup:
     return err;
@@ -554,7 +555,7 @@ ERR PKCreateCodecFactory(PKCodecFactory** ppCFactory, U32 uVersion)
     ERR err = WMP_errSuccess;
     PKCodecFactory* pCFactory = NULL;
 
-    Call(PKAlloc(ppCFactory, sizeof(**ppCFactory)));
+    Call(PKAlloc((void**)ppCFactory, sizeof(**ppCFactory)));
     pCFactory = *ppCFactory;
 
     pCFactory->CreateCodec = PKCodecFactory_CreateCodec;
@@ -688,14 +689,14 @@ ERR PKImageEncode_WriteSource(
     cbStride = max(cbStrideFrom, cbStrideTo);
 
     // actual dec/enc with local buffer
-    Call(PKAllocAligned(&pb, cbStride * pRect->Height, 128));
+    Call(PKAllocAligned((void**)&pb, cbStride * pRect->Height, 128));
 
     Call(pFC->Copy(pFC, pRect, pb, cbStride));
 
 	Call(pIE->WritePixels(pIE, pRect->Height, pb, cbStride));
 
 Cleanup:
-    PKFreeAligned(&pb);
+    PKFreeAligned((void**)&pb);
     return err;
 }
 
@@ -766,13 +767,13 @@ ERR PKImageEncode_Transcode(
 	else 
 	{
 		// actual dec/enc with local buffer
-	    Call(PKAllocAligned(&pb, cbStride * pRect->Height, 128));
+	    Call(PKAllocAligned((void**)&pb, cbStride * pRect->Height, 128));
 		Call(pFC->Copy(pFC, pRect, pb, cbStride));
 		Call(pIE->WritePixels(pIE, pRect->Height, pb, cbStride));
 	}
 
 Cleanup:
-    PKFreeAligned(&pb);
+    PKFreeAligned((void**)&pb);
     return err;
 }
 
@@ -791,7 +792,7 @@ ERR PKImageEncode_Release(
     PKImageEncode *pIE = *ppIE;
     pIE->pStream->Close(&pIE->pStream);
 
-    return PKFree(ppIE);
+    return PKFree((void**)ppIE);
 }
 
 ERR PKImageEncode_Create(PKImageEncode** ppIE)
@@ -799,7 +800,7 @@ ERR PKImageEncode_Create(PKImageEncode** ppIE)
     ERR err = WMP_errSuccess;
     PKImageEncode* pIE = NULL;
 
-    Call(PKAlloc(ppIE, sizeof(**ppIE)));
+    Call(PKAlloc((void**)ppIE, sizeof(**ppIE)));
 
     pIE = *ppIE;
     pIE->Initialize = PKImageEncode_Initialize;
@@ -913,7 +914,7 @@ ERR PKImageDecode_Release(
 
     pID->fStreamOwner && pID->pStream->Close(&pID->pStream);
 
-    return PKFree(ppID);
+    return PKFree((void**)ppID);
 }
 
 ERR PKImageDecode_Create(
@@ -922,7 +923,7 @@ ERR PKImageDecode_Create(
     ERR err = WMP_errSuccess;
     PKImageDecode* pID = NULL;
 
-    Call(PKAlloc(ppID, sizeof(**ppID)));
+    Call(PKAlloc((void**)ppID, sizeof(**ppID)));
 
     pID = *ppID;
     pID->Initialize = PKImageDecode_Initialize;
diff --git a/systems/tools/wmpgluelib/WMPGlue.h b/systems/tools/wmpgluelib/WMPGlue.h
index bc069df..265ef6f 100644
--- a/systems/tools/wmpgluelib/WMPGlue.h
+++ b/systems/tools/wmpgluelib/WMPGlue.h
@@ -10,8 +10,8 @@
 extern "C" {
 #endif
 
-#include <WMPMeta.h>
-#include <guiddef.h>
+#include "WMPMeta.h"
+#include "guiddef.h"
 
 //================================================================
 #define WMP_SDK_VERSION 0x0101
@@ -244,19 +244,8 @@ ERR GetImageDecodeIID(const char* szExt, const PKIID** ppIID);
 
 
 //================================================================
-#ifdef __ANSI__
-#define PKFactory           struct tagPKFactory
-#define PKCodecFactory      struct tagPKCodecFactory
-#define PKImageDecode       struct tagPKImageDecode
-#define PKImageEncode       struct tagPKImageEncode
-#define PKFormatConverter   struct tagPKFormatConverter
-#else // __ANSI__
-typedef struct tagPKFactory PKFactory;
-typedef struct tagPKCodecFactory PKCodecFactory;
-typedef struct tagPKImageDecode PKImageDecode;
-typedef struct tagPKImageEncode PKImageEncode;
-typedef struct tagPKFormatConverter PKFormatConverter;
-#endif // __ANSI__
+struct tagPKImageDecode;
+struct tagPKFormatConverter;
 //================================================================
 typedef struct tagPKStream
 {
@@ -276,10 +265,7 @@ typedef struct tagPKFactory
     ERR (*CreateStreamFromFilename)(struct WMPStream**, const char*, const char*);
     ERR (*CreateStreamFromMemory)(struct WMPStream**, void*, size_t);
 
-    ERR (*Release)(PKFactory**);
-#ifdef __ANSI__
-#undef PKFactory
-#endif // __ANSI__
+    ERR (*Release)(struct tagPKFactory**);
 } PKFactory;
 
 //----------------------------------------------------------------
@@ -293,13 +279,10 @@ EXTERN_C ERR PKCreateFactory(PKFactory**, U32);
 typedef struct tagPKCodecFactory
 {
     ERR (*CreateCodec)(const PKIID*, void**);
-    ERR (*CreateDecoderFromFile)(const char*, PKImageDecode**);
-    ERR (*CreateFormatConverter)(PKFormatConverter**);
+    ERR (*CreateDecoderFromFile)(const char*, struct tagPKImageDecode**);
+    ERR (*CreateFormatConverter)(struct tagPKFormatConverter**);
 
-    ERR (*Release)(PKCodecFactory**);
-#ifdef __ANSI__
-#undef PKCodecFactory
-#endif // __ANSI__
+    ERR (*Release)(struct tagPKCodecFactory**);
 } PKCodecFactory;
 
 //----------------------------------------------------------------
@@ -312,21 +295,21 @@ EXTERN_C ERR PKCreateCodecFactory(PKCodecFactory**, U32);
 typedef struct tagPKImageEncode
 {
     //ERR (*GetPixelFormat)(MILPixelFormat*));
-    ERR (*Initialize)(PKImageEncode*, struct WMPStream*, void*, size_t);
-    ERR (*Terminate)(PKImageEncode*);
+    ERR (*Initialize)(struct tagPKImageEncode*, struct WMPStream*, void*, size_t);
+    ERR (*Terminate)(struct tagPKImageEncode*);
 
-    ERR (*SetPixelFormat)(PKImageEncode*, PKPixelFormatGUID);
-    ERR (*SetSize)(PKImageEncode*, I32, I32);
-    ERR (*SetResolution)(PKImageEncode*, Float, Float);
+    ERR (*SetPixelFormat)(struct tagPKImageEncode*, PKPixelFormatGUID);
+    ERR (*SetSize)(struct tagPKImageEncode*, I32, I32);
+    ERR (*SetResolution)(struct tagPKImageEncode*, Float, Float);
 
-    ERR (*WritePixels)(PKImageEncode*, U32, U8*, U32);
-    ERR (*WriteSource)(PKImageEncode*, PKFormatConverter*, PKRect*);
+    ERR (*WritePixels)(struct tagPKImageEncode*, U32, U8*, U32);
+    ERR (*WriteSource)(struct tagPKImageEncode*, struct tagPKFormatConverter*, PKRect*);
 
-    ERR (*Transcode)(PKImageEncode*, PKImageDecode*, CWMTranscodingParam*);
+    ERR (*Transcode)(struct tagPKImageEncode*, struct tagPKImageDecode*, CWMTranscodingParam*);
 
-    ERR (*CreateNewFrame)(PKImageEncode*, void*, size_t);
+    ERR (*CreateNewFrame)(struct tagPKImageEncode*, void*, size_t);
 
-    ERR (*Release)(PKImageEncode**);
+    ERR (*Release)(struct tagPKImageEncode**);
 
     struct WMPStream* pStream;
     size_t offStart;
@@ -346,7 +329,7 @@ typedef struct tagPKImageEncode
     size_t offPixel;
     size_t cbPixel;
 
-	Bool bWMP;//for the encoder in decoding
+    Bool bWMP;//for the encoder in decoding
 
     union
     {
@@ -367,9 +350,6 @@ typedef struct tagPKImageEncode
             Long nCbAlpha;
         } WMP;
     };
-#ifdef __ANSI__
-#undef PKImageEncode
-#endif // __ANSI__
 } PKImageEncode;
 
 //----------------------------------------------------------------
@@ -396,20 +376,20 @@ ERR PKImageEncode_Create(PKImageEncode** ppIE);
 //================================================================
 typedef struct tagPKImageDecode
 {
-    ERR (*Initialize)(PKImageDecode*, struct WMPStream* pStream);
+    ERR (*Initialize)(struct tagPKImageDecode*, struct WMPStream* pStream);
 
-    ERR (*GetPixelFormat)(PKImageDecode*, PKPixelFormatGUID*);
-    ERR (*GetSize)(PKImageDecode*, I32*, I32*);
-    ERR (*GetResolution)(PKImageDecode*, Float*, Float*);
+    ERR (*GetPixelFormat)(struct tagPKImageDecode*, PKPixelFormatGUID*);
+    ERR (*GetSize)(struct tagPKImageDecode*, I32*, I32*);
+    ERR (*GetResolution)(struct tagPKImageDecode*, Float*, Float*);
 
-    ERR (*GetRawStream)(PKImageDecode*, struct WMPStream**);
+    ERR (*GetRawStream)(struct tagPKImageDecode*, struct WMPStream**);
 
-    ERR (*Copy)(PKImageDecode*, const PKRect*, U8*, U32);
+    ERR (*Copy)(struct tagPKImageDecode*, const PKRect*, U8*, U32);
 
-    ERR (*GetFrameCount)(PKImageDecode*, U32*);
-    ERR (*SelectFrame)(PKImageDecode*, U32);
+    ERR (*GetFrameCount)(struct tagPKImageDecode*, U32*);
+    ERR (*SelectFrame)(struct tagPKImageDecode*, U32);
 
-    ERR (*Release)(PKImageDecode**);
+    ERR (*Release)(struct tagPKImageDecode**);
 
     struct WMPStream* pStream;
     Bool fStreamOwner;
@@ -476,9 +456,6 @@ typedef struct tagPKImageDecode
             Bool fLittleEndian;
         } TIF;
     };
-#ifdef __ANSI__
-#undef PKImageDecode
-#endif // __ANSI__
 } PKImageDecode;
 
 //----------------------------------------------------------------
@@ -506,23 +483,20 @@ ERR PKCodecFactory_CreateDecoderFromFile(const char* szFilename, PKImageDecode**
 //================================================================
 typedef struct tagPKFormatConverter
 {
-    ERR (*Initialize)(PKFormatConverter*, PKImageDecode*, char *pExt, PKPixelFormatGUID);
+    ERR (*Initialize)(struct tagPKFormatConverter*, PKImageDecode*, char *pExt, PKPixelFormatGUID);
 
-    ERR (*GetPixelFormat)(PKFormatConverter*, PKPixelFormatGUID*);
-    ERR (*GetSourcePixelFormat)(PKFormatConverter*, PKPixelFormatGUID*);
-    ERR (*GetSize)(PKFormatConverter*, I32*, I32*);
-    ERR (*GetResolution)(PKFormatConverter*, Float*, Float*);
+    ERR (*GetPixelFormat)(struct tagPKFormatConverter*, PKPixelFormatGUID*);
+    ERR (*GetSourcePixelFormat)(struct tagPKFormatConverter*, PKPixelFormatGUID*);
+    ERR (*GetSize)(struct tagPKFormatConverter*, I32*, I32*);
+    ERR (*GetResolution)(struct tagPKFormatConverter*, Float*, Float*);
 
-    ERR (*Copy)(PKFormatConverter*, const PKRect*, U8*, U32);
-    ERR (*Convert)(PKFormatConverter*, const PKRect*, U8*, U32);
+    ERR (*Copy)(struct tagPKFormatConverter*, const PKRect*, U8*, U32);
+    ERR (*Convert)(struct tagPKFormatConverter*, const PKRect*, U8*, U32);
 
-    ERR (*Release)(PKFormatConverter**);
+    ERR (*Release)(struct tagPKFormatConverter**);
 
     PKImageDecode* pDecoder;
     PKPixelFormatGUID enPixelFormat;
-#ifdef __ANSI__
-#undef PKFormatConverter
-#endif // __ANSI__
 } PKFormatConverter;
 
 //----------------------------------------------------------------
diff --git a/systems/tools/wmpgluelib/WMPGlueBmp.c b/systems/tools/wmpgluelib/WMPGlueBmp.c
index b917c70..81a2bd7 100644
--- a/systems/tools/wmpgluelib/WMPGlueBmp.c
+++ b/systems/tools/wmpgluelib/WMPGlueBmp.c
@@ -9,7 +9,9 @@
 
 #include <WMPGlue.h>
 
+#ifdef _MSC_VER
 #pragma pack(push, 1)
+#endif
 
 #define BI_RGB 0
 #define BI_BITFIELDS 3
@@ -55,8 +57,9 @@ typedef struct tagBITMAPINFOHEADEREXT{
     U32 uD;
 } BITMAPINFOHEADEREXT, *PBITMAPINFOHEADEREXT;
 
-
+#ifdef _MSC_VER
 #pragma pack(pop)
+#endif
 
 //================================================================
 // PKImageEncode_BMP
@@ -232,7 +235,7 @@ ERR ParseBMPHeader(
     U32 i = 0;
 
     Call(pWS->Read(pWS, &bmpFH, sizeof(bmpFH)));
-    FailIf(bmpFH.szBM != strstr(bmpFH.szBM, "BM"), WMP_errUnsupportedFormat);
+    FailIf((char*)bmpFH.szBM != strstr(bmpFH.szBM, "BM"), WMP_errUnsupportedFormat);
 
     Call(pWS->Read(pWS, &bmpIH, sizeof(bmpIH)));
 
diff --git a/systems/tools/wmpgluelib/WMPGlueHdr.c b/systems/tools/wmpgluelib/WMPGlueHdr.c
index 520c9f3..c7f2bac 100644
--- a/systems/tools/wmpgluelib/WMPGlueHdr.c
+++ b/systems/tools/wmpgluelib/WMPGlueHdr.c
@@ -10,8 +10,10 @@
 
 #include <WMPGlue.h>
 
+#ifdef _MSC_VER
 #pragma pack(push, 1)
 #pragma pack(pop)
+#endif
 
 //================================================================
 // PKImageEncode_HDR
diff --git a/systems/tools/wmpgluelib/WMPGluePFC.c b/systems/tools/wmpgluelib/WMPGluePFC.c
index e2bfc6e..87761a0 100644
--- a/systems/tools/wmpgluelib/WMPGluePFC.c
+++ b/systems/tools/wmpgluelib/WMPGluePFC.c
@@ -256,7 +256,7 @@ ERR PKFormatConverter_Release(PKFormatConverter** ppFC)
 {
     ERR err = WMP_errSuccess;
 
-    Call(PKFree(ppFC));
+    Call(PKFree((void**)ppFC));
 
 Cleanup:
     return err;
diff --git a/systems/tools/wmpgluelib/WMPGluePnm.c b/systems/tools/wmpgluelib/WMPGluePnm.c
index 3c23478..e75a862 100644
--- a/systems/tools/wmpgluelib/WMPGluePnm.c
+++ b/systems/tools/wmpgluelib/WMPGluePnm.c
@@ -178,19 +178,19 @@ ERR ParsePNMHeader(
 
     //================================
     Call(GetLineSkipPound(pWS, line, sizeof2(line)));
-    if (line == strstr(line, "P5"))
+    if ((char*)line == strstr(line, "P5"))
     {
         idxChannel = 0;
         Call(GetLineSkipPound(pWS, line, sizeof2(line)));
         FailIf(2 != sscanf(line, "%u %u", &width, &height), WMP_errUnsupportedFormat);
     }
-    else if(line == strstr(line, "P6"))
+    else if((char*)line == strstr(line, "P6"))
     {
         idxChannel = 1;
         Call(GetLineSkipPound(pWS, line, sizeof2(line)));
         FailIf(2 != sscanf(line, "%u %u", &width, &height), WMP_errUnsupportedFormat);
     } 
-    else if(line == strstr(line, "PF")) 
+    else if((char*)line == strstr(line, "PF")) 
     {
         idxChannel = 2;
         Call(GetLineSkipPound(pWS, line, sizeof2(line)));
diff --git a/systems/tools/wmpgluelib/WMPGlueTif.c b/systems/tools/wmpgluelib/WMPGlueTif.c
index e6250ad..0720a96 100644
--- a/systems/tools/wmpgluelib/WMPGlueTif.c
+++ b/systems/tools/wmpgluelib/WMPGlueTif.c
@@ -582,7 +582,7 @@ ERR ParseTifDEValue(
             break;
 
         case TIF_tagStripOffsets:
-            Call(WMPAlloc(&pID->TIF.uStripOffsets, sizeof(*pID->TIF.uStripOffsets) * uCount));
+            Call(WMPAlloc((void**)&pID->TIF.uStripOffsets, sizeof(*pID->TIF.uStripOffsets) * uCount));
             Call(GetTifULong(pWS, offPos, pID->TIF.fLittleEndian, &uValue0));
             Call(GetTifULongArray(pWS, uValue0, uCount, pID->TIF.fLittleEndian, pID->TIF.uStripOffsets));
             break;
@@ -597,7 +597,7 @@ ERR ParseTifDEValue(
             break;
 
         case TIF_tagStripByteCounts:
-            Call(WMPAlloc(&pID->TIF.uStripByteCounts, sizeof(*pID->TIF.uStripByteCounts) * uCount));
+            Call(WMPAlloc((void**)&pID->TIF.uStripByteCounts, sizeof(*pID->TIF.uStripByteCounts) * uCount));
             Call(GetTifULong(pWS, offPos, pID->TIF.fLittleEndian, &uValue0));
             Call(GetTifULongArray(pWS, uValue0, uCount, pID->TIF.fLittleEndian, pID->TIF.uStripByteCounts));
             break;
@@ -697,11 +697,11 @@ ERR ParseTifHeader(
     // Header
     Call(pWS->Read(pWS, szSig, 2));
     offPos += 2;
-    if (szSig == strstr(szSig, "II"))
+    if ((char*)szSig == strstr(szSig, "II"))
     {
         pID->TIF.fLittleEndian = !FALSE;
     }
-    else if (szSig == strstr(szSig, "MM"))
+    else if ((char*)szSig == strstr(szSig, "MM"))
     {
         pID->TIF.fLittleEndian = FALSE;
     }
@@ -828,8 +828,8 @@ ERR PKImageDecode_Release_TIF(PKImageDecode** ppID)
 
     PKImageDecode *pID = *ppID;
 
-    Call(WMPFree(&pID->TIF.uStripOffsets));
-    Call(WMPFree(&pID->TIF.uStripByteCounts));
+    Call(WMPFree((void**)&pID->TIF.uStripOffsets));
+    Call(WMPFree((void**)&pID->TIF.uStripByteCounts));
 
     Call(PKImageDecode_Release(ppID));
 
diff --git a/systems/tools/wmpgluelib/WMPGlueWmp.c b/systems/tools/wmpgluelib/WMPGlueWmp.c
index d0adaf1..58045a9 100644
--- a/systems/tools/wmpgluelib/WMPGlueWmp.c
+++ b/systems/tools/wmpgluelib/WMPGlueWmp.c
@@ -439,7 +439,7 @@ ERR PKImageEncode_Release_WMP(
     PKImageEncode *pIE = *ppIE;
     pIE->pStream->Close(&pIE->pStream);
 
-    Call(PKFree(ppIE));
+    Call(PKFree((void**)ppIE));
 
 Cleanup:
     return err;
@@ -495,7 +495,7 @@ ERR ParsePFDEntry(
         {
             unsigned char *pGuid = (unsigned char *) &pID->guidPixFormat;
             /** following code is endian-agnostic **/
-            Call(GetULong(pWS, uValue, (unsigned long *)pGuid));
+            Call(GetULong(pWS, uValue, (U32*)pGuid));
             Call(GetUShort(pWS, uValue + 4, (unsigned short *)(pGuid + 4)));
             Call(GetUShort(pWS, uValue + 6, (unsigned short *)(pGuid + 6)));
             Call(pWS->Read(pWS, pGuid + 8, 8));
diff --git a/systems/tools/wmpgluelib/WMPGlueYUV.c b/systems/tools/wmpgluelib/WMPGlueYUV.c
index 3e989e3..f0581dd 100644
--- a/systems/tools/wmpgluelib/WMPGlueYUV.c
+++ b/systems/tools/wmpgluelib/WMPGlueYUV.c
@@ -10,8 +10,10 @@
 
 #include <WMPGlue.h>
 
+#ifdef _MSC_VER
 #pragma pack(push, 1)
 #pragma pack(pop)
+#endif
 
 //================================================================
 // PKImageEncode_Iyuv
diff --git a/systems/tools/wmpmetalib/WMPMeta.h b/systems/tools/wmpmetalib/WMPMeta.h
index 0fd648f..fe2ac67 100644
--- a/systems/tools/wmpmetalib/WMPMeta.h
+++ b/systems/tools/wmpmetalib/WMPMeta.h
@@ -6,8 +6,8 @@
 //*@@@---@@@@******************************************************************
 #pragma once
 
-#include <windowsmediaphoto.h>
-#include <wmspecstring.h>
+#include "windowsmediaphoto.h"
+#include "wmspecstring.h"
 
 //================================================================
 // Container
