diff --git a/CMakeCPack.cmake b/CMakeCPack.cmake
index 22ca8cf..2a9ead2 100644
--- a/CMakeCPack.cmake
+++ b/CMakeCPack.cmake
@@ -145,4 +145,6 @@ if(EXISTS "${CMAKE_ROOT}/Modules/CPack.cmake")
 
   # include CPack model once all variables are set
   include(CPack)
+  set(CPACK_PKG_TGZ_NAME ${CPACK_PACKAGE_FILE_NAME}-${CPACK_SYSTEM_NAME})
+  include(xpsolpkg OPTIONAL) # create solaris pkg
 endif()
diff --git a/CMakeLists.txt b/CMakeLists.txt
index 1b91ab8..a1992c5 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -301,6 +301,8 @@ macro (CMAKE_BUILD_UTILITIES)
       set(CURL_CA_BUNDLE "" CACHE FILEPATH "Path to SSL CA Certificate Bundle")
       set(CURL_CA_PATH "" CACHE PATH "Path to SSL CA Certificate Directory")
       mark_as_advanced(CURL_CA_BUNDLE CURL_CA_PATH)
+      option(CMAKE_USE_OPENSSL_MODULE_PATH "Find OpenSSL in CMAKE_MODULE_PATH." OFF)
+      mark_as_advanced(CMAKE_USE_OPENSSL_MODULE_PATH)
     endif()
     add_subdirectory(Utilities/cmcurl)
     CMAKE_SET_TARGET_FOLDER(cmcurl "Utilities/3rdParty")
@@ -499,6 +501,7 @@ if(NOT CMake_TEST_EXTERNAL_CMAKE)
 
   # include special compile flags for some compilers
   include(CompileFlags.cmake)
+  include(flags OPTIONAL)
 
   # no clue why we are testing for this here
   include(CheckSymbolExists)
diff --git a/Help/generator/Borland Makefiles.rst b/Help/generator/Borland Makefiles.rst
deleted file mode 100644
index c00d00a..0000000
--- a/Help/generator/Borland Makefiles.rst	
+++ /dev/null
@@ -1,4 +0,0 @@
-Borland Makefiles
------------------
-
-Generates Borland makefiles.
diff --git a/Help/generator/Borland_Makefiles.rst b/Help/generator/Borland_Makefiles.rst
new file mode 100644
index 0000000..c00d00a
--- /dev/null
+++ b/Help/generator/Borland_Makefiles.rst
@@ -0,0 +1,4 @@
+Borland Makefiles
+-----------------
+
+Generates Borland makefiles.
diff --git a/Help/generator/Eclipse CDT4.rst b/Help/generator/Eclipse CDT4.rst
deleted file mode 100644
index eb68bf0..0000000
--- a/Help/generator/Eclipse CDT4.rst	
+++ /dev/null
@@ -1,25 +0,0 @@
-Eclipse CDT4
-------------
-
-Generates Eclipse CDT 4.0 project files.
-
-Project files for Eclipse will be created in the top directory.  In
-out of source builds, a linked resource to the top level source
-directory will be created.  Additionally a hierarchy of makefiles is
-generated into the build tree.  The appropriate make program can build
-the project through the default make target.  A "make install" target
-is also provided.
-
-This "extra" generator may be specified as:
-
-``Eclipse CDT4 - MinGW Makefiles``
- Generate with :generator:`MinGW Makefiles`.
-
-``Eclipse CDT4 - NMake Makefiles``
- Generate with :generator:`NMake Makefiles`.
-
-``Eclipse CDT4 - Ninja``
- Generate with :generator:`Ninja`.
-
-``Eclipse CDT4 - Unix Makefiles``
- Generate with :generator:`Unix Makefiles`.
diff --git a/Help/generator/Eclipse_CDT4.rst b/Help/generator/Eclipse_CDT4.rst
new file mode 100644
index 0000000..eb68bf0
--- /dev/null
+++ b/Help/generator/Eclipse_CDT4.rst
@@ -0,0 +1,25 @@
+Eclipse CDT4
+------------
+
+Generates Eclipse CDT 4.0 project files.
+
+Project files for Eclipse will be created in the top directory.  In
+out of source builds, a linked resource to the top level source
+directory will be created.  Additionally a hierarchy of makefiles is
+generated into the build tree.  The appropriate make program can build
+the project through the default make target.  A "make install" target
+is also provided.
+
+This "extra" generator may be specified as:
+
+``Eclipse CDT4 - MinGW Makefiles``
+ Generate with :generator:`MinGW Makefiles`.
+
+``Eclipse CDT4 - NMake Makefiles``
+ Generate with :generator:`NMake Makefiles`.
+
+``Eclipse CDT4 - Ninja``
+ Generate with :generator:`Ninja`.
+
+``Eclipse CDT4 - Unix Makefiles``
+ Generate with :generator:`Unix Makefiles`.
diff --git a/Help/generator/Green Hills MULTI.rst b/Help/generator/Green Hills MULTI.rst
deleted file mode 100644
index 4d31690..0000000
--- a/Help/generator/Green Hills MULTI.rst	
+++ /dev/null
@@ -1,16 +0,0 @@
-Green Hills MULTI
------------------
-
-Generates Green Hills MULTI project files (experimental, work-in-progress).
-
-Customizations are available through the following cache variables:
-
-* ``GHS_BSP_NAME``
-* ``GHS_CUSTOMIZATION``
-* ``GHS_GPJ_MACROS``
-* ``GHS_OS_DIR``
-
-.. note::
-  This generator is deemed experimental as of CMake |release|
-  and is still a work in progress.  Future versions of CMake
-  may make breaking changes as the generator matures.
diff --git a/Help/generator/Green_Hills_MULTI.rst b/Help/generator/Green_Hills_MULTI.rst
new file mode 100644
index 0000000..4d31690
--- /dev/null
+++ b/Help/generator/Green_Hills_MULTI.rst
@@ -0,0 +1,16 @@
+Green Hills MULTI
+-----------------
+
+Generates Green Hills MULTI project files (experimental, work-in-progress).
+
+Customizations are available through the following cache variables:
+
+* ``GHS_BSP_NAME``
+* ``GHS_CUSTOMIZATION``
+* ``GHS_GPJ_MACROS``
+* ``GHS_OS_DIR``
+
+.. note::
+  This generator is deemed experimental as of CMake |release|
+  and is still a work in progress.  Future versions of CMake
+  may make breaking changes as the generator matures.
diff --git a/Help/generator/MSYS Makefiles.rst b/Help/generator/MSYS Makefiles.rst
deleted file mode 100644
index f7cfa44..0000000
--- a/Help/generator/MSYS Makefiles.rst	
+++ /dev/null
@@ -1,11 +0,0 @@
-MSYS Makefiles
---------------
-
-Generates makefiles for use with MSYS ``make`` under the MSYS shell.
-
-Use this generator in a MSYS shell prompt and using ``make`` as the build
-tool.  The generated makefiles use ``/bin/sh`` as the shell to launch build
-rules.  They are not compatible with a Windows command prompt.
-
-To build under a Windows command prompt, use the
-:generator:`MinGW Makefiles` generator.
diff --git a/Help/generator/MSYS_Makefiles.rst b/Help/generator/MSYS_Makefiles.rst
new file mode 100644
index 0000000..f7cfa44
--- /dev/null
+++ b/Help/generator/MSYS_Makefiles.rst
@@ -0,0 +1,11 @@
+MSYS Makefiles
+--------------
+
+Generates makefiles for use with MSYS ``make`` under the MSYS shell.
+
+Use this generator in a MSYS shell prompt and using ``make`` as the build
+tool.  The generated makefiles use ``/bin/sh`` as the shell to launch build
+rules.  They are not compatible with a Windows command prompt.
+
+To build under a Windows command prompt, use the
+:generator:`MinGW Makefiles` generator.
diff --git a/Help/generator/MinGW Makefiles.rst b/Help/generator/MinGW Makefiles.rst
deleted file mode 100644
index 9fe5fe3..0000000
--- a/Help/generator/MinGW Makefiles.rst	
+++ /dev/null
@@ -1,12 +0,0 @@
-MinGW Makefiles
----------------
-
-Generates makefiles for use with ``mingw32-make`` under a Windows command
-prompt.
-
-Use this generator under a Windows command prompt with MinGW in the ``PATH``
-and using ``mingw32-make`` as the build tool.  The generated makefiles use
-``cmd.exe`` as the shell to launch build rules.  They are not compatible with
-MSYS or a unix shell.
-
-To build under the MSYS shell, use the :generator:`MSYS Makefiles` generator.
diff --git a/Help/generator/MinGW_Makefiles.rst b/Help/generator/MinGW_Makefiles.rst
new file mode 100644
index 0000000..9fe5fe3
--- /dev/null
+++ b/Help/generator/MinGW_Makefiles.rst
@@ -0,0 +1,12 @@
+MinGW Makefiles
+---------------
+
+Generates makefiles for use with ``mingw32-make`` under a Windows command
+prompt.
+
+Use this generator under a Windows command prompt with MinGW in the ``PATH``
+and using ``mingw32-make`` as the build tool.  The generated makefiles use
+``cmd.exe`` as the shell to launch build rules.  They are not compatible with
+MSYS or a unix shell.
+
+To build under the MSYS shell, use the :generator:`MSYS Makefiles` generator.
diff --git a/Help/generator/NMake Makefiles JOM.rst b/Help/generator/NMake Makefiles JOM.rst
deleted file mode 100644
index 3a8744c..0000000
--- a/Help/generator/NMake Makefiles JOM.rst	
+++ /dev/null
@@ -1,4 +0,0 @@
-NMake Makefiles JOM
--------------------
-
-Generates JOM makefiles.
diff --git a/Help/generator/NMake Makefiles.rst b/Help/generator/NMake Makefiles.rst
deleted file mode 100644
index 89f2479..0000000
--- a/Help/generator/NMake Makefiles.rst	
+++ /dev/null
@@ -1,4 +0,0 @@
-NMake Makefiles
----------------
-
-Generates NMake makefiles.
diff --git a/Help/generator/NMake_Makefiles.rst b/Help/generator/NMake_Makefiles.rst
new file mode 100644
index 0000000..89f2479
--- /dev/null
+++ b/Help/generator/NMake_Makefiles.rst
@@ -0,0 +1,4 @@
+NMake Makefiles
+---------------
+
+Generates NMake makefiles.
diff --git a/Help/generator/NMake_Makefiles_JOM.rst b/Help/generator/NMake_Makefiles_JOM.rst
new file mode 100644
index 0000000..3a8744c
--- /dev/null
+++ b/Help/generator/NMake_Makefiles_JOM.rst
@@ -0,0 +1,4 @@
+NMake Makefiles JOM
+-------------------
+
+Generates JOM makefiles.
diff --git a/Help/generator/Sublime Text 2.rst b/Help/generator/Sublime Text 2.rst
deleted file mode 100644
index 0597a95..0000000
--- a/Help/generator/Sublime Text 2.rst	
+++ /dev/null
@@ -1,25 +0,0 @@
-Sublime Text 2
---------------
-
-Generates Sublime Text 2 project files.
-
-Project files for Sublime Text 2 will be created in the top directory
-and in every subdirectory which features a CMakeLists.txt file
-containing a PROJECT() call.  Additionally Makefiles (or build.ninja
-files) are generated into the build tree.  The appropriate make
-program can build the project through the default make target.  A
-"make install" target is also provided.
-
-This "extra" generator may be specified as:
-
-``Sublime Text 2 - MinGW Makefiles``
- Generate with :generator:`MinGW Makefiles`.
-
-``Sublime Text 2 - NMake Makefiles``
- Generate with :generator:`NMake Makefiles`.
-
-``Sublime Text 2 - Ninja``
- Generate with :generator:`Ninja`.
-
-``Sublime Text 2 - Unix Makefiles``
- Generate with :generator:`Unix Makefiles`.
diff --git a/Help/generator/Sublime_Text_2.rst b/Help/generator/Sublime_Text_2.rst
new file mode 100644
index 0000000..0597a95
--- /dev/null
+++ b/Help/generator/Sublime_Text_2.rst
@@ -0,0 +1,25 @@
+Sublime Text 2
+--------------
+
+Generates Sublime Text 2 project files.
+
+Project files for Sublime Text 2 will be created in the top directory
+and in every subdirectory which features a CMakeLists.txt file
+containing a PROJECT() call.  Additionally Makefiles (or build.ninja
+files) are generated into the build tree.  The appropriate make
+program can build the project through the default make target.  A
+"make install" target is also provided.
+
+This "extra" generator may be specified as:
+
+``Sublime Text 2 - MinGW Makefiles``
+ Generate with :generator:`MinGW Makefiles`.
+
+``Sublime Text 2 - NMake Makefiles``
+ Generate with :generator:`NMake Makefiles`.
+
+``Sublime Text 2 - Ninja``
+ Generate with :generator:`Ninja`.
+
+``Sublime Text 2 - Unix Makefiles``
+ Generate with :generator:`Unix Makefiles`.
diff --git a/Help/generator/Unix Makefiles.rst b/Help/generator/Unix Makefiles.rst
deleted file mode 100644
index 97d74a8..0000000
--- a/Help/generator/Unix Makefiles.rst	
+++ /dev/null
@@ -1,8 +0,0 @@
-Unix Makefiles
---------------
-
-Generates standard UNIX makefiles.
-
-A hierarchy of UNIX makefiles is generated into the build tree.  Any
-standard UNIX-style make program can build the project through the
-default make target.  A "make install" target is also provided.
diff --git a/Help/generator/Unix_Makefiles.rst b/Help/generator/Unix_Makefiles.rst
new file mode 100644
index 0000000..97d74a8
--- /dev/null
+++ b/Help/generator/Unix_Makefiles.rst
@@ -0,0 +1,8 @@
+Unix Makefiles
+--------------
+
+Generates standard UNIX makefiles.
+
+A hierarchy of UNIX makefiles is generated into the build tree.  Any
+standard UNIX-style make program can build the project through the
+default make target.  A "make install" target is also provided.
diff --git a/Help/generator/Visual Studio 10 2010.rst b/Help/generator/Visual Studio 10 2010.rst
deleted file mode 100644
index 77ea9df..0000000
--- a/Help/generator/Visual Studio 10 2010.rst	
+++ /dev/null
@@ -1,19 +0,0 @@
-Visual Studio 10 2010
----------------------
-
-Generates Visual Studio 10 (VS 2010) project files.
-
-The :variable:`CMAKE_GENERATOR_PLATFORM` variable may be set
-to specify a target platform name.
-
-For compatibility with CMake versions prior to 3.1, one may specify
-a target platform name optionally at the end of this generator name:
-
-``Visual Studio 10 2010 Win64``
-  Specify target platform ``x64``.
-
-``Visual Studio 10 2010 IA64``
-  Specify target platform ``Itanium``.
-
-For compatibility with CMake versions prior to 3.0, one may specify this
-generator using the name ``Visual Studio 10`` without the year component.
diff --git a/Help/generator/Visual Studio 11 2012.rst b/Help/generator/Visual Studio 11 2012.rst
deleted file mode 100644
index 5fa7f2c..0000000
--- a/Help/generator/Visual Studio 11 2012.rst	
+++ /dev/null
@@ -1,22 +0,0 @@
-Visual Studio 11 2012
----------------------
-
-Generates Visual Studio 11 (VS 2012) project files.
-
-The :variable:`CMAKE_GENERATOR_PLATFORM` variable may be set
-to specify a target platform name.
-
-For compatibility with CMake versions prior to 3.1, one may specify
-a target platform name optionally at the end of this generator name:
-
-``Visual Studio 11 2012 Win64``
-  Specify target platform ``x64``.
-
-``Visual Studio 11 2012 ARM``
-  Specify target platform ``ARM``.
-
-``Visual Studio 11 2012 <WinCE-SDK>``
-  Specify target platform matching a Windows CE SDK name.
-
-For compatibility with CMake versions prior to 3.0, one may specify this
-generator using the name "Visual Studio 11" without the year component.
diff --git a/Help/generator/Visual Studio 12 2013.rst b/Help/generator/Visual Studio 12 2013.rst
deleted file mode 100644
index 2c3b119..0000000
--- a/Help/generator/Visual Studio 12 2013.rst	
+++ /dev/null
@@ -1,19 +0,0 @@
-Visual Studio 12 2013
----------------------
-
-Generates Visual Studio 12 (VS 2013) project files.
-
-The :variable:`CMAKE_GENERATOR_PLATFORM` variable may be set
-to specify a target platform name.
-
-For compatibility with CMake versions prior to 3.1, one may specify
-a target platform name optionally at the end of this generator name:
-
-``Visual Studio 12 2013 Win64``
-  Specify target platform ``x64``.
-
-``Visual Studio 12 2013 ARM``
-  Specify target platform ``ARM``.
-
-For compatibility with CMake versions prior to 3.0, one may specify this
-generator using the name "Visual Studio 12" without the year component.
diff --git a/Help/generator/Visual Studio 14 2015.rst b/Help/generator/Visual Studio 14 2015.rst
deleted file mode 100644
index b35997a..0000000
--- a/Help/generator/Visual Studio 14 2015.rst	
+++ /dev/null
@@ -1,16 +0,0 @@
-Visual Studio 14 2015
----------------------
-
-Generates Visual Studio 14 (VS 2015) project files.
-
-The :variable:`CMAKE_GENERATOR_PLATFORM` variable may be set
-to specify a target platform name.
-
-For compatibility with CMake versions prior to 3.1, one may specify
-a target platform name optionally at the end of this generator name:
-
-``Visual Studio 14 2015 Win64``
-  Specify target platform ``x64``.
-
-``Visual Studio 14 2015 ARM``
-  Specify target platform ``ARM``.
diff --git a/Help/generator/Visual Studio 6.rst b/Help/generator/Visual Studio 6.rst
deleted file mode 100644
index 855589c..0000000
--- a/Help/generator/Visual Studio 6.rst	
+++ /dev/null
@@ -1,10 +0,0 @@
-Visual Studio 6
----------------
-
-Deprected.  Generates Visual Studio 6 project files.
-
-.. note::
-  This generator is deprecated and will be removed
-  in a future version of CMake.  It will still be
-  possible to build with VS 6 tools using the
-  :generator:`NMake Makefiles` generator.
diff --git a/Help/generator/Visual Studio 7 .NET 2003.rst b/Help/generator/Visual Studio 7 .NET 2003.rst
deleted file mode 100644
index 2034140..0000000
--- a/Help/generator/Visual Studio 7 .NET 2003.rst	
+++ /dev/null
@@ -1,4 +0,0 @@
-Visual Studio 7 .NET 2003
--------------------------
-
-Generates Visual Studio .NET 2003 project files.
diff --git a/Help/generator/Visual Studio 7.rst b/Help/generator/Visual Studio 7.rst
deleted file mode 100644
index eb426f4..0000000
--- a/Help/generator/Visual Studio 7.rst	
+++ /dev/null
@@ -1,10 +0,0 @@
-Visual Studio 7
----------------
-
-Deprected.  Generates Visual Studio .NET 2002 project files.
-
-.. note::
-  This generator is deprecated and will be removed
-  in a future version of CMake.  It will still be
-  possible to build with VS 7.0 tools using the
-  :generator:`NMake Makefiles` generator.
diff --git a/Help/generator/Visual Studio 8 2005.rst b/Help/generator/Visual Studio 8 2005.rst
deleted file mode 100644
index 29012c3..0000000
--- a/Help/generator/Visual Studio 8 2005.rst	
+++ /dev/null
@@ -1,16 +0,0 @@
-Visual Studio 8 2005
---------------------
-
-Generates Visual Studio 8 2005 project files.
-
-The :variable:`CMAKE_GENERATOR_PLATFORM` variable may be set
-to specify a target platform name.
-
-For compatibility with CMake versions prior to 3.1, one may specify
-a target platform name optionally at the end of this generator name:
-
-``Visual Studio 8 2005 Win64``
-  Specify target platform ``x64``.
-
-``Visual Studio 8 2005 <WinCE-SDK>``
-  Specify target platform matching a Windows CE SDK name.
diff --git a/Help/generator/Visual Studio 9 2008.rst b/Help/generator/Visual Studio 9 2008.rst
deleted file mode 100644
index 40471b9..0000000
--- a/Help/generator/Visual Studio 9 2008.rst	
+++ /dev/null
@@ -1,19 +0,0 @@
-Visual Studio 9 2008
---------------------
-
-Generates Visual Studio 9 2008 project files.
-
-The :variable:`CMAKE_GENERATOR_PLATFORM` variable may be set
-to specify a target platform name.
-
-For compatibility with CMake versions prior to 3.1, one may specify
-a target platform name optionally at the end of this generator name:
-
-``Visual Studio 9 2008 Win64``
-  Specify target platform ``x64``.
-
-``Visual Studio 9 2008 IA64``
-  Specify target platform ``Itanium``.
-
-``Visual Studio 9 2008 <WinCE-SDK>``
-  Specify target platform matching a Windows CE SDK name.
diff --git a/Help/generator/Visual_Studio_10_2010.rst b/Help/generator/Visual_Studio_10_2010.rst
new file mode 100644
index 0000000..77ea9df
--- /dev/null
+++ b/Help/generator/Visual_Studio_10_2010.rst
@@ -0,0 +1,19 @@
+Visual Studio 10 2010
+---------------------
+
+Generates Visual Studio 10 (VS 2010) project files.
+
+The :variable:`CMAKE_GENERATOR_PLATFORM` variable may be set
+to specify a target platform name.
+
+For compatibility with CMake versions prior to 3.1, one may specify
+a target platform name optionally at the end of this generator name:
+
+``Visual Studio 10 2010 Win64``
+  Specify target platform ``x64``.
+
+``Visual Studio 10 2010 IA64``
+  Specify target platform ``Itanium``.
+
+For compatibility with CMake versions prior to 3.0, one may specify this
+generator using the name ``Visual Studio 10`` without the year component.
diff --git a/Help/generator/Visual_Studio_11_2012.rst b/Help/generator/Visual_Studio_11_2012.rst
new file mode 100644
index 0000000..5fa7f2c
--- /dev/null
+++ b/Help/generator/Visual_Studio_11_2012.rst
@@ -0,0 +1,22 @@
+Visual Studio 11 2012
+---------------------
+
+Generates Visual Studio 11 (VS 2012) project files.
+
+The :variable:`CMAKE_GENERATOR_PLATFORM` variable may be set
+to specify a target platform name.
+
+For compatibility with CMake versions prior to 3.1, one may specify
+a target platform name optionally at the end of this generator name:
+
+``Visual Studio 11 2012 Win64``
+  Specify target platform ``x64``.
+
+``Visual Studio 11 2012 ARM``
+  Specify target platform ``ARM``.
+
+``Visual Studio 11 2012 <WinCE-SDK>``
+  Specify target platform matching a Windows CE SDK name.
+
+For compatibility with CMake versions prior to 3.0, one may specify this
+generator using the name "Visual Studio 11" without the year component.
diff --git a/Help/generator/Visual_Studio_12_2013.rst b/Help/generator/Visual_Studio_12_2013.rst
new file mode 100644
index 0000000..2c3b119
--- /dev/null
+++ b/Help/generator/Visual_Studio_12_2013.rst
@@ -0,0 +1,19 @@
+Visual Studio 12 2013
+---------------------
+
+Generates Visual Studio 12 (VS 2013) project files.
+
+The :variable:`CMAKE_GENERATOR_PLATFORM` variable may be set
+to specify a target platform name.
+
+For compatibility with CMake versions prior to 3.1, one may specify
+a target platform name optionally at the end of this generator name:
+
+``Visual Studio 12 2013 Win64``
+  Specify target platform ``x64``.
+
+``Visual Studio 12 2013 ARM``
+  Specify target platform ``ARM``.
+
+For compatibility with CMake versions prior to 3.0, one may specify this
+generator using the name "Visual Studio 12" without the year component.
diff --git a/Help/generator/Visual_Studio_14_2015.rst b/Help/generator/Visual_Studio_14_2015.rst
new file mode 100644
index 0000000..b35997a
--- /dev/null
+++ b/Help/generator/Visual_Studio_14_2015.rst
@@ -0,0 +1,16 @@
+Visual Studio 14 2015
+---------------------
+
+Generates Visual Studio 14 (VS 2015) project files.
+
+The :variable:`CMAKE_GENERATOR_PLATFORM` variable may be set
+to specify a target platform name.
+
+For compatibility with CMake versions prior to 3.1, one may specify
+a target platform name optionally at the end of this generator name:
+
+``Visual Studio 14 2015 Win64``
+  Specify target platform ``x64``.
+
+``Visual Studio 14 2015 ARM``
+  Specify target platform ``ARM``.
diff --git a/Help/generator/Visual_Studio_6.rst b/Help/generator/Visual_Studio_6.rst
new file mode 100644
index 0000000..855589c
--- /dev/null
+++ b/Help/generator/Visual_Studio_6.rst
@@ -0,0 +1,10 @@
+Visual Studio 6
+---------------
+
+Deprected.  Generates Visual Studio 6 project files.
+
+.. note::
+  This generator is deprecated and will be removed
+  in a future version of CMake.  It will still be
+  possible to build with VS 6 tools using the
+  :generator:`NMake Makefiles` generator.
diff --git a/Help/generator/Visual_Studio_7.rst b/Help/generator/Visual_Studio_7.rst
new file mode 100644
index 0000000..eb426f4
--- /dev/null
+++ b/Help/generator/Visual_Studio_7.rst
@@ -0,0 +1,10 @@
+Visual Studio 7
+---------------
+
+Deprected.  Generates Visual Studio .NET 2002 project files.
+
+.. note::
+  This generator is deprecated and will be removed
+  in a future version of CMake.  It will still be
+  possible to build with VS 7.0 tools using the
+  :generator:`NMake Makefiles` generator.
diff --git a/Help/generator/Visual_Studio_7_.NET_2003.rst b/Help/generator/Visual_Studio_7_.NET_2003.rst
new file mode 100644
index 0000000..2034140
--- /dev/null
+++ b/Help/generator/Visual_Studio_7_.NET_2003.rst
@@ -0,0 +1,4 @@
+Visual Studio 7 .NET 2003
+-------------------------
+
+Generates Visual Studio .NET 2003 project files.
diff --git a/Help/generator/Visual_Studio_8_2005.rst b/Help/generator/Visual_Studio_8_2005.rst
new file mode 100644
index 0000000..29012c3
--- /dev/null
+++ b/Help/generator/Visual_Studio_8_2005.rst
@@ -0,0 +1,16 @@
+Visual Studio 8 2005
+--------------------
+
+Generates Visual Studio 8 2005 project files.
+
+The :variable:`CMAKE_GENERATOR_PLATFORM` variable may be set
+to specify a target platform name.
+
+For compatibility with CMake versions prior to 3.1, one may specify
+a target platform name optionally at the end of this generator name:
+
+``Visual Studio 8 2005 Win64``
+  Specify target platform ``x64``.
+
+``Visual Studio 8 2005 <WinCE-SDK>``
+  Specify target platform matching a Windows CE SDK name.
diff --git a/Help/generator/Visual_Studio_9_2008.rst b/Help/generator/Visual_Studio_9_2008.rst
new file mode 100644
index 0000000..40471b9
--- /dev/null
+++ b/Help/generator/Visual_Studio_9_2008.rst
@@ -0,0 +1,19 @@
+Visual Studio 9 2008
+--------------------
+
+Generates Visual Studio 9 2008 project files.
+
+The :variable:`CMAKE_GENERATOR_PLATFORM` variable may be set
+to specify a target platform name.
+
+For compatibility with CMake versions prior to 3.1, one may specify
+a target platform name optionally at the end of this generator name:
+
+``Visual Studio 9 2008 Win64``
+  Specify target platform ``x64``.
+
+``Visual Studio 9 2008 IA64``
+  Specify target platform ``Itanium``.
+
+``Visual Studio 9 2008 <WinCE-SDK>``
+  Specify target platform matching a Windows CE SDK name.
diff --git a/Help/generator/Watcom WMake.rst b/Help/generator/Watcom WMake.rst
deleted file mode 100644
index 09bdc3d..0000000
--- a/Help/generator/Watcom WMake.rst	
+++ /dev/null
@@ -1,4 +0,0 @@
-Watcom WMake
-------------
-
-Generates Watcom WMake makefiles.
diff --git a/Help/generator/Watcom_WMake.rst b/Help/generator/Watcom_WMake.rst
new file mode 100644
index 0000000..09bdc3d
--- /dev/null
+++ b/Help/generator/Watcom_WMake.rst
@@ -0,0 +1,4 @@
+Watcom WMake
+------------
+
+Generates Watcom WMake makefiles.
diff --git a/Utilities/cmcurl/CMakeLists.txt b/Utilities/cmcurl/CMakeLists.txt
index 32e4561..92a3b1d 100644
--- a/Utilities/cmcurl/CMakeLists.txt
+++ b/Utilities/cmcurl/CMakeLists.txt
@@ -431,7 +431,11 @@ set(HAVE_LIBCRYPTO OFF)
 set(HAVE_LIBSSL OFF)
 
 if(CMAKE_USE_OPENSSL)
-  find_package(OpenSSL)
+  if(CMAKE_USE_OPENSSL_MODULE_PATH)
+    find_package(usexp-OpenSSL REQUIRED PATHS ${CMAKE_MODULE_PATH} NO_DEFAULT_PATH)
+  else()
+    find_package(OpenSSL)
+  endif()
   if(OPENSSL_FOUND)
     list(APPEND CURL_LIBS ${OPENSSL_LIBRARIES})
     set(USE_SSLEAY ON)
