diff --git a/CMakeLists.txt b/CMakeLists.txt
new file mode 100644
index 0000000..17b2bdc
--- /dev/null
+++ b/CMakeLists.txt
@@ -0,0 +1,23 @@
+cmake_minimum_required(VERSION 3.0)
+project(gsoap)
+include(flags OPTIONAL)
+set(lib_name gsoap)
+#######################################
+# library sources
+set(${lib_name}_libsrcs
+  gsoap/stdsoap2.cpp
+  gsoap/stdsoap2.h
+  )
+source_group("" FILES ${${lib_name}_libsrcs})
+#######################################
+# library
+add_library(${lib_name} STATIC ${${lib_name}_libsrcs})
+#######################################
+# install
+install(TARGETS ${lib_name} EXPORT ${PROJECT_NAME}-targets
+  RUNTIME DESTINATION bin
+  LIBRARY DESTINATION lib
+  ARCHIVE DESTINATION lib
+  )
+install(FILES gsoap/stdsoap2.h DESTINATION include/gsoap)
+install(EXPORT ${PROJECT_NAME}-targets DESTINATION lib/cmake)
diff --git a/gsoap/stdsoap2.h b/gsoap/stdsoap2.h
index 58260a7..29a83a1 100644
--- a/gsoap/stdsoap2.h
+++ b/gsoap/stdsoap2.h
@@ -51,6 +51,11 @@ A commercial use license is available from Genivia, Inc., contact@genivia.com
 --------------------------------------------------------------------------------
 */
 
+/* SDL HACK: ignore warnings from gcc >= 4.8 */
+#if (__GNUC__ >= 4) && (__GNUC_MINOR__ >= 8)
+# pragma GCC system_header
+#endif
+
 #ifdef WITH_SOAPDEFS_H
 # include "soapdefs.h"		/* include user-defined stuff */
 #endif
@@ -478,7 +483,9 @@ A commercial use license is available from Genivia, Inc., contact@genivia.com
 #  define SOAP_ULONG_FORMAT "%lu"
 # else
 /* Default assumptions for supported functions */
-#  define HAVE_SNPRINTF
+#  ifndef HAVE_SNPRINTF 
+#   define HAVE_SNPRINTF
+#  endif
 #  define HAVE_STRRCHR
 #  define HAVE_STRTOD
 #  define HAVE_SSCANF
@@ -488,8 +495,12 @@ A commercial use license is available from Genivia, Inc., contact@genivia.com
 #  define HAVE_FTIME
 #  define HAVE_RAND_R
 #  define HAVE_GETHOSTBYNAME_R
-#  define HAVE_GMTIME_R
-#  define HAVE_LOCALTIME_R
+#  ifndef HAVE_GMTIME_R
+#   define HAVE_GMTIME_R
+#  endif
+#  ifndef HAVE_LOCALTIME_R
+#   define HAVE_LOCALTIME_R
+#  endif
 #  ifdef MB_LEN_MAX
 #   define HAVE_WCTOMB
 #   define HAVE_MBTOWC
@@ -637,8 +648,8 @@ A commercial use license is available from Genivia, Inc., contact@genivia.com
 #  define SOAP_GAI_STRERROR gai_strerrorA
 # else
 #  ifndef __BORLANDC__
-#   include <winsock.h> /* Visual Studio 2005 users: you must install the Platform SDK (R2) */
-/* # include <winsock2.h> */ /* Alternative: use winsock2 (not available with eVC), enable this line and comment out the line above */
+/*#   include <winsock.h> */ /* Visual Studio 2005 users: you must install the Platform SDK (R2) */
+#   include <winsock2.h> /* Alternative: use winsock2 (not available with eVC), enable this line and comment out the line above */
 #  else
 #   include <winsock2.h> /* Borland C */
 #  endif
@@ -1306,9 +1317,9 @@ typedef soap_int32 soap_mode;
 # endif
 # ifndef DBGFUN
 #  define DBGFUN(FNAME) DBGLOG(TEST, SOAP_MESSAGE(fdebug, "%s(%d): %s()\n", __FILE__, __LINE__, FNAME))
-#  define DBGFUN1(FNAME, FMT, ARG) DBGLOG(TEST, SOAP_MESSAGE(fdebug, "%s(%d): %s("FMT")\n", __FILE__, __LINE__, FNAME, (ARG)))
-#  define DBGFUN2(FNAME, FMT1, ARG1, FMT2, ARG2) DBGLOG(TEST, SOAP_MESSAGE(fdebug, "%s(%d): %s("FMT1", "FMT2")\n", __FILE__, __LINE__, FNAME, (ARG1), (ARG2)))
-#  define DBGFUN3(FNAME, FMT1, ARG1, FMT2, ARG2, FMT3, ARG3) DBGLOG(TEST, SOAP_MESSAGE(fdebug, "%s(%d): %s("FMT1", "FMT2", "FMT3")\n", __FILE__, __LINE__, FNAME, (ARG1), (ARG2), (ARG3)))
+#  define DBGFUN1(FNAME, FMT, ARG) DBGLOG(TEST, SOAP_MESSAGE(fdebug, "%s(%d): %s(" FMT ")\n", __FILE__, __LINE__, FNAME, (ARG)))
+#  define DBGFUN2(FNAME, FMT1, ARG1, FMT2, ARG2) DBGLOG(TEST, SOAP_MESSAGE(fdebug, "%s(%d): %s(" FMT1 ", " FMT2 ")\n", __FILE__, __LINE__, FNAME, (ARG1), (ARG2)))
+#  define DBGFUN3(FNAME, FMT1, ARG1, FMT2, ARG2, FMT3, ARG3) DBGLOG(TEST, SOAP_MESSAGE(fdebug, "%s(%d): %s(" FMT1 ", " FMT2 ", " FMT3 ")\n", __FILE__, __LINE__, FNAME, (ARG1), (ARG2), (ARG3)))
 # endif
 # ifndef DBGHEX
 #  define DBGHEX(DBGFILE, MSG, LEN) \
